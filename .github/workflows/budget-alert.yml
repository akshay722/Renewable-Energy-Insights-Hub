name: AWS Budget Alert

on:
  schedule:
    # Run daily at midnight
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  check-budget:
    name: Check AWS Usage
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-west-2
      BUDGET_AMOUNT: 1.0
      THRESHOLD_PERCENT: 80

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Check AWS Free Tier Usage
        run: |
          # Get current month range
          MONTH_START=$(date -d "$(date +%Y-%m-01)" +%Y-%m-%d)
          TODAY=$(date +%Y-%m-%d)

          echo "Fetching AWS cost data from $MONTH_START to $TODAY..."

          # Get AWS Cost Explorer data
          COST_DATA=$(aws ce get-cost-and-usage \
            --time-period Start=$MONTH_START,End=$TODAY \
            --granularity MONTHLY \
            --metrics "UnblendedCost" \
            --output json)

          # Extract cost
          TOTAL_COST=$(echo $COST_DATA | jq -r '.ResultsByTime[0].Total.UnblendedCost.Amount')

          echo "Current month cost: $TOTAL_COST USD (Budget: ${{ env.BUDGET_AMOUNT }} USD)"

          # Check against threshold
          THRESHOLD_AMOUNT=$(echo "${{ env.BUDGET_AMOUNT }} * ${{ env.THRESHOLD_PERCENT }} / 100" | bc -l)

          if (( $(echo "$TOTAL_COST > $THRESHOLD_AMOUNT" | bc -l) )); then
            echo "::warning::⚠️ AWS costs approaching budget! Current: $TOTAL_COST USD, Threshold: $THRESHOLD_AMOUNT USD"
          else
            echo "✅ AWS costs within budget: $TOTAL_COST USD"
          fi
