name: Deploy to AWS Free Tier

on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - ".github/workflows/backend-ci.yml"
      - ".github/workflows/frontend-ci.yml"
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Confirm deployment (type "yes")'
        required: true
        default: "no"

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.deploy == 'yes'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install awsebcli

      - name: Generate Elastic Beanstalk configuration
        working-directory: ./backend
        run: |
          mkdir -p .elasticbeanstalk
          cat > .elasticbeanstalk/config.yml << EOF
          branch-defaults:
            main:
              environment: renewable-energy-api
              group_suffix: null
          global:
            application_name: renewable-energy-api
            default_ec2_keyname: null
            default_platform: Python 3.10
            default_region: us-east-1
            include_git_submodules: true
            platform_name: null
            platform_version: null
            profile: null
            sc: git
            workspace_type: Application
          EOF

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create application zip
        working-directory: ./backend
        run: |
          zip -r ../deployment.zip . -x "venv/*" "__pycache__/*" "*.pyc" "*.pyo"

      - name: Verify instance type (Free Tier)
        working-directory: ./backend
        run: |
          echo "Ensuring Free Tier compatible instance type..."
          mkdir -p .ebextensions
          cat > .ebextensions/00_free_tier.config << EOF
          option_settings:
            aws:autoscaling:launchconfiguration:
              InstanceType: t2.micro
            aws:elasticbeanstalk:environment:
              EnvironmentType: SingleInstance
          EOF
          zip -r ../deployment.zip .ebextensions/00_free_tier.config

      - name: Deploy to Elastic Beanstalk
        working-directory: ./backend
        run: |
          eb deploy renewable-energy-api --staged
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.deploy == 'yes'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Update API endpoint
        working-directory: ./frontend
        run: |
          # Replace the API endpoint with Elastic Beanstalk URL
          sed -i "s|VITE_API_BASE_URL=.*|VITE_API_BASE_URL=https://${{ secrets.EB_ENVIRONMENT_URL }}/api/v1|g" .env.production

      - name: Build
        working-directory: ./frontend
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to S3
        working-directory: ./frontend
        run: |
          echo "Deploying to S3 bucket: ${{ secrets.S3_BUCKET }}"
          aws s3 sync dist/ s3://${{ secrets.S3_BUCKET }} --delete

      - name: Invalidate CloudFront cache
        run: |
          echo "Invalidating CloudFront distribution: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}"
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

  cost-check:
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Check AWS Free Tier usage
        run: |
          echo "Checking AWS Free Tier usage..."
          echo "This is a reminder to monitor your AWS Free Tier usage to avoid charges."
          echo "Visit https://console.aws.amazon.com/billing/home#/freetier to check your usage."

          # This command will output the current month's estimated charges
          aws ce get-cost-and-usage \
            --time-period Start=$(date -d "$(date +%Y-%m-01) -1 day" +%Y-%m-01),End=$(date -d "$(date +%Y-%m-01) +1 month" +%Y-%m-01) \
            --granularity MONTHLY \
            --metrics "BlendedCost" "UnblendedCost" \
            --output table || echo "Cost Explorer might not be enabled. Enable it manually if needed."
